import streamlit as st
import pandas as pd

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Comparador de Ganhos TVDE",
    page_icon="üöó",
    layout="wide"
)

# T√≠tulo da aplica√ß√£o
st.title("üöó Comparador de Ganhos TVDE")
st.markdown("Compare os lucros entre usar carro alugado e carro pr√≥prio para trabalhar como motorista TVDE")

# Estado para controlar a visibilidade dos par√¢metros
if 'show_params' not in st.session_state:
    st.session_state.show_params = False

# Divis√£o em colunas
col1, col2 = st.columns(2)

with col1:
    st.header("üìä Dados de Entrada")
    
    # Entradas do usu√°rio
    weekly_earnings = st.number_input(
        "Ganhos Semanais (‚Ç¨):", 
        min_value=0.0, 
        value=800.0, 
        step=50.0,
        help="Valor total ganho por semana antes de despesas"
    )
    
    fuel_cost = st.number_input(
        "Custo Semanal com Combust√≠vel (‚Ç¨):", 
        min_value=0.0, 
        value=120.0, 
        step=10.0,
        help="Custo semanal estimado com combust√≠vel"
    )

# Bot√£o para mostrar/ocultar par√¢metros
if st.button("‚öôÔ∏è Par√¢metros"):
    st.session_state.show_params = not st.session_state.show_params

# Mostrar par√¢metros apenas se show_params for True
if st.session_state.show_params:
    with col2:
        st.header("‚öôÔ∏è Par√¢metros")
        
        # Par√¢metros para carro alugado
        st.subheader("Carro Alugado")
        rental_cost = st.number_input(
            "Custo do Aluguel (‚Ç¨/semana):", 
            min_value=0.0, 
            value=280.0, 
            step=10.0,
            key="rental_cost"
        )
        
        rental_commission = st.slider(
            "Comiss√£o com Carro Alugado (%):", 
            min_value=0, 
            max_value=30, 
            value=7, 
            step=1,
            key="rental_commission"
        )
        
        # Par√¢metros para carro pr√≥prio
        st.subheader("Carro Pr√≥prio")
        own_insurance = st.number_input(
            "Seguro (‚Ç¨/semana):", 
            min_value=0.0, 
            value=45.0, 
            step=5.0,
            key="own_insurance"
        )
        
        own_maintenance = st.number_input(
            "Manuten√ß√£o (‚Ç¨/semana):", 
            min_value=0.0, 
            value=50.0, 
            step=5.0,
            key="own_maintenance",
            help="Custo semanal estimado com manuten√ß√£o do ve√≠culo pr√≥prio"
        )
        
        own_commission = st.slider(
            "Comiss√£o com Carro Pr√≥prio (%):", 
            min_value=0, 
            max_value=30, 
            value=12, 
            step=1,
            key="own_commission"
        )
else:
    # Valores padr√£o quando os par√¢metros est√£o ocultos
    rental_cost = 280.0
    rental_commission = 7
    own_insurance = 45.0
    own_maintenance = 50.0
    own_commission = 12

# C√°lculos
if st.button("Calcular", type="primary"):
    # Calcular para carro alugado
    rental_commission_value = weekly_earnings * (rental_commission / 100)
    rental_net = weekly_earnings - rental_commission_value - rental_cost - fuel_cost
    
    # Calcular para carro pr√≥prio
    own_commission_value = weekly_earnings * (own_commission / 100)
    own_net = weekly_earnings - own_commission_value - own_insurance - own_maintenance - fuel_cost
    
    # Calcular diferen√ßa
    difference = rental_net - own_net
    
    # Exibir resultados
    st.header("üìà Resultados")
    
    # M√©tricas
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.metric(
            "Carro Alugado (L√≠quido Semanal)", 
            f"‚Ç¨ {rental_net:.2f}",
            delta_color="inverse" if rental_net < 0 else "normal"
        )
    
    with col2:
        st.metric(
            "Carro Pr√≥prio (L√≠quido Semanal)", 
            f"‚Ç¨ {own_net:.2f}",
            delta_color="inverse" if own_net < 0 else "normal"
        )
    
    with col3:
        st.metric(
            "Diferen√ßa Semanal", 
            f"‚Ç¨ {difference:.2f}",
            delta_color="inverse" if difference < 0 else "normal"
        )
    
    # Detalhamento dos c√°lculos
    st.subheader("Detalhamento dos C√°lculos")
    
    # Tabela comparativa
    comparison_data = {
        "Descri√ß√£o": [
            "Ganhos Semanais",
            "Comiss√£o",
            "Custo do Aluguel/Seguro",
            "Manuten√ß√£o",
            "Custo com Combust√≠vel",
            "Total L√≠quido"
        ],
        "Carro Alugado (‚Ç¨)": [
            weekly_earnings,
            -rental_commission_value,
            -rental_cost,
            0,  # Manuten√ß√£o n√£o se aplica a carro alugado
            -fuel_cost,
            rental_net
        ],
        "Carro Pr√≥prio (‚Ç¨)": [
            weekly_earnings,
            -own_commission_value,
            -own_insurance,
            -own_maintenance,
            -fuel_cost,
            own_net
        ]
    }
    
    df = pd.DataFrame(comparison_data)
    st.dataframe(df, use_container_width=True)
    
    # Recomenda√ß√£o
    st.subheader("Recomenda√ß√£o")
    if difference > 0:
        st.success(f"‚úÖ O carro alugado √© mais vantajoso por ‚Ç¨ {difference:.2f} por semana.")
    elif difference < 0:
        st.success(f"‚úÖ O carro pr√≥prio √© mais vantajoso por ‚Ç¨ {abs(difference):.2f} por semana.")
    else:
        st.info("‚ÑπÔ∏è Ambas as op√ß√µes t√™m o mesmo resultado financeiro.")
    
    # Visualiza√ß√£o gr√°fica
    st.subheader("Compara√ß√£o Visual")
    
    chart_data = pd.DataFrame({
        "Op√ß√£o": ["Carro Alugado", "Carro Pr√≥prio"],
        "Lucro L√≠quido (‚Ç¨)": [rental_net, own_net]
    })
    
    st.bar_chart(chart_data, x="Op√ß√£o", y="Lucro L√≠quido (‚Ç¨)")

# Informa√ß√µes adicionais
with st.expander("üí° Dicas e Informa√ß√µes"):
    st.markdown("""
    - **Ganhos Semanais**: Valor total que voc√™ recebe pelos servi√ßos de TVDE em uma semana
    - **Custo com Combust√≠vel**: Gasto semanal estimado com abastecimento
    - **Comiss√£o**: Percentual que a plataforma ret√©m pelos servi√ßos
    - **Custo do Aluguel**: Valor semanal pelo aluguel do ve√≠culo (se aplic√°vel)
    - **Seguro**: Custo semanal do seguro do ve√≠culo pr√≥prio
    - **Manuten√ß√£o**: Custo semanal estimado com manuten√ß√£o do ve√≠culo pr√≥prio
                
    ‚ö†Ô∏è Lembre-se de considerar outros custos n√£o inclu√≠dos aqui, como:
    - Lavagens e limpeza
    - Estacionamento e portagens
    - Desvaloriza√ß√£o do ve√≠culo (no caso de carro pr√≥prio)
    - Impostos e taxas
    """)

# Rodap√©
st.markdown("---")
st.caption("Desenvolvido para ajudar motoristas TVDE a tomar decis√µes financeiras informadas")
